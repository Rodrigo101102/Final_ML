# ============================================================================
# ML TRAFFIC ANALYZER - REQUIREMENTS COMPLETO
# Ejecutar: pip install -r requirements.txt
# Luego: python app_postgres.py (backend) + npm start (frontend)
# ============================================================================

# ⚠️ IMPORTANTE: Compatible con Python 3.8-3.11 (evita 3.12+)

# ============================================================================
# 1. DEPENDENCIAS BASE DE COMPILACIÓN (para evitar errores)
# ============================================================================
setuptools>=65.0.0
wheel>=0.40.0
Cython>=0.29.32

# ============================================================================
# 2. DEPENDENCIAS CORE DE PYTHON
# ============================================================================
numpy>=1.24.0,<2.0.0          # Base para todo ML - evita numpy 2.0+
scipy>=1.10.0,<2.0.0          # Dependencia de scikit-learn

# ============================================================================
# 3. MACHINE LEARNING 
# ============================================================================
scikit-learn==1.3.2           # Version estable con wheels para Python 3.8-3.11
pandas>=2.0.0,<2.2.0          # Procesamiento de datos
joblib>=1.3.0,<2.0.0          # Para guardar/cargar modelos ML

# ============================================================================
# 4. WEB FRAMEWORK (BACKEND API)
# ============================================================================
fastapi>=0.104.0,<0.110.0     # API REST framework
uvicorn[standard]>=0.24.0,<0.30.0  # Servidor ASGI
pydantic>=2.5.0,<3.0.0        # Validación de datos
python-dotenv>=1.0.0,<2.0.0   # Variables de entorno (.env)

# ============================================================================
# 5. BASE DE DATOS
# ============================================================================
sqlalchemy>=2.0.20,<2.1.0     # ORM
psycopg2-binary>=2.9.0,<3.0.0 # Driver PostgreSQL (BINARY = sin compilación)

# ============================================================================
# 6. UTILIDADES DEL SISTEMA
# ============================================================================
psutil>=5.9.0,<6.0.0          # Información del sistema y procesos

# ============================================================================
# 7. DEPENDENCIAS ADICIONALES PARA EVITAR CONFLICTOS
# ============================================================================
# Threading y concurrencia
threadpoolctl>=3.1.0          # Control de threads en ML libraries
six>=1.16.0                   # Compatibilidad Python 2/3

# Utilidades matemáticas y científicas
pytz>=2023.3                  # Zonas horarias
python-dateutil>=2.8.2       # Parsing de fechas

# Encoding y formato de datos
urllib3>=1.26.0,<3.0.0       # HTTP client
certifi>=2023.7.22           # Certificados SSL
charset-normalizer>=3.0.0    # Detección de encoding

# ============================================================================
# 8. DEPENDENCIAS OPCIONALES PARA DEBUGGING
# ============================================================================
typing-extensions>=4.7.0     # Type hints extendidos
annotated-types>=0.4.0       # Annotations de Pydantic

# ============================================================================
# NOTAS DE INSTALACIÓN:
# 
# 1. Ejecutar en este orden:
#    pip install --upgrade pip
#    pip install -r requirements.txt
#
# 2. Si hay errores de compilación:
#    - Verificar que usas Python 3.8-3.11 (NO 3.12+)
#    - Ejecutar: python --version
#
# 3. Para PostgreSQL en Windows también instalar:
#    - PostgreSQL server
#    - Configurar variables en backend/.env
#
# 4. Backend listo cuando veas: "Uvicorn running on http://127.0.0.1:8010"
# ============================================================================